@keyframes horizontal {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.about-title {
  font-size: 2.5rem;
  font-weight: 700;
  color: azure;
  background: linear-gradient(270deg, #f76927 0%, #fdfa29 100%);
  background-size: 150%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: 4s linear infinite;
  animation-name: horizontal;
}

.about-text b {
  color: #faa628;
}

.stack__name {
  font-size: 0px;
}
.stacks ul {
  padding: 0.8em 1em;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1.5em;
  list-style: none;
}
.stack {
  position: relative;
  width: 3.3em;
  height: 3.3em;
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;
}
.stack:hover::before,
.stack:focus-visible::before,
.stack:active::before {
  border-color: var(--background-dif);
  backdrop-filter: blur(14px);
}
.stack:hover::after,
.stack:focus-visible::after,
.stack:active::after {
  box-shadow: 0 0 35px 20px var(--background-dif);
}
.stack::after {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  box-shadow: 0 0 35px 12px var(--background-dif);
  z-index: -2;
}
.stack::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  border: 1px solid transparent;
  border-radius: 1em;
  backdrop-filter: blur(30px);
  z-index: -1;
}
.glow {
  position: absolute;
  top: 15em;
  left: 50%;
  width: 40em;
  max-width: 100%;
  height: 20em;
  border-radius: 30%;
  display: block;
  background: radial-gradient(#460631aa 20%, #d886c455 100%);
  transform: translate(-50%, 0%);
  will-change: transform;
  filter: blur(100px);
  z-index: -1;
}
.glow1 {
  position: absolute;
  top: 20em;
  left: 50%;
  width: 40em;
  max-width: 100%;
  height: 20em;
  border-radius: 30%;
  display: block;
  background: radial-gradient(#198ba4aa 20%, #198ba455 100%);
  transform: translate(-50%, 0%);
  will-change: transform;
  filter: blur(100px);
  z-index: -1;
}

/*--Icons--*/
[class^="icon-"],
[class*=" icon-"] {
  width: 40px;
  height: 32px;
  display: block;
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
}
.icon-HTML {
  background-image: url("../icons/html5.svg");
}
.icon-Github {
  background-image: url("../icons/github.svg");
}
.icon-LinkedIn {
  background-image: url("../icons/linkedin.svg");
}
.icon-CV {
  background-image: url("../icons/cv.svg");
}
.icon-CSS {
  background-image: url("../icons/css.svg");
}
.icon-JavaScript {
  background-image: url("../icons/javascript.svg");
}
.icon-TypeScript {
  background-image: url("../icons/typescript.svg");
}
.icon-Tailwind {
  background-image: url("../icons/tailwindcss.svg");
}
.icon-React {
  background-image: url("../icons/react.svg");
}
.icon-NextJS {
  background-image: url("../icons/nextjs.svg");
}
.icon-Astro {
  background-image: url("../icons/astro.svg");
}
.icon-NodeJS {
  background-image: url("../icons/nodejs.svg");
}
.icon-Express {
  background-image: url("../icons/expressjs.svg");
}
.icon-Jest {
  background-image: url("../icons/jest.svg");
}
.icon-Git {
  background-image: url("../icons/git.svg");
}
.icon-Figma {
  background-image: url("../icons/figma.svg");
}
.icon-Zustand {
  background-image: url("../icons/zustand.png");
}
.icon-Bootstrap {
  background-image: url("../icons/bootstrap.svg");
}
.icon-GraphQL {
  background-image: url("../icons/graphql.svg");
}
.icon-MUI {
  background-image: url("../icons/mui.svg");
}
.icon-SASS {
  background-image: url("../icons/sass.svg");
}
.icon-Vite {
  background-image: url("../icons/vite.svg");
}
.icon-Vitest {
  background-image: url("../icons/vitest.svg");
}
.icon-Apollo {
  background-image: url("../icons/apollo.svg");
}
.icon-Java {
  background-image: url("../icons/java.svg");
}
.icon-NestJS {
  background-image: url("../icons/nest.svg");
}
.icon-Cypress {
  background-image: url("../icons/cypress.svg");
}
.icon-GraphQL {
  background-image: url("../icons/graphql.svg");
}
.icon-MongoDB {
  background-image: url("../icons/mongo.svg");
}
.icon-Postgres {
  background-image: url("../icons/postgres.svg");
}
.icon-MySQL {
  background-image: url("../icons/mysql.svg");
}
.icon-AWS {
  background-image: url("../icons/aws.svg");
}
.icon-Docker {
  background-image: url("../icons/docker.svg");
}
.icon-Supabase {
  background-image: url("../icons/supabase.svg");
}

/*--Tooltip--*/
tool-tip {
  --_p-inline: 1.5em;
  --_p-block: 0.4em;
  --_triangle-size: 7px;
  --_shadow-alpha: 50%;

  --_x: calc(var(--isRTL) * -3px * -1);

  --_bottom-tip: conic-gradient(
      from -30deg at bottom,
      rgba(0, 0, 0, 0),
      #000 1deg 60deg,
      rgba(0, 0, 0, 0) 61deg
    )
    bottom / 100% 50% no-repeat;
  --_top-tip: conic-gradient(
      from 150deg at top,
      rgba(0, 0, 0, 0),
      #000 1deg 60deg,
      rgba(0, 0, 0, 0) 61deg
    )
    top / 100% 50% no-repeat;
  --_right-tip: conic-gradient(
      from -120deg at right,
      rgba(0, 0, 0, 0),
      #000 1deg 60deg,
      rgba(0, 0, 0, 0) 61deg
    )
    right / 50% 100% no-repeat;
  --_left-tip: conic-gradient(
      from 60deg at left,
      rgba(0, 0, 0, 0),
      #000 1deg 60deg,
      rgba(0, 0, 0, 0) 61deg
    )
    left / 50% 100% no-repeat;

  pointer-events: none;
  user-select: none;

  opacity: 0;
  transform: translateX(var(--_x, 0)) translateY(var(--_y, 0));
  transition:
    opacity 0.2s ease,
    transform 0.2s ease;

  position: absolute;
  z-index: 2;
  inline-size: max-content;
  max-inline-size: 25ch;
  text-align: start;
  font-size: 1.1rem;
  font-weight: 500;
  line-height: normal;
  line-height: initial;
  padding: var(--_p-block) var(--_p-inline);
  margin: 0;
  border-radius: 12px;
  border: 1px solid var(--background-dif);
  background: transparent;
  color: var(--background-dif);
  will-change: filter;
  filter: drop-shadow(0 3px 3px hsl(0 0% 0% / var(--_shadow-alpha)))
    drop-shadow(0 12px 12px hsl(0 0% 0% / var(--_shadow-alpha)));
  backdrop-filter: blur(10px);
}
[tool-tip] {
  position: relative;
}
[tool-tip]:is(:hover, :focus-visible, :active) > tool-tip {
  opacity: 1;
  transition-delay: 200ms;
}
tool-tip::before {
  content: "; Has tooltip: ";
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
}
tool-tip::after {
  content: "";
  background: transparent;
  position: absolute;
  z-index: -1;
  inset: 0;
  mask: var(--_tip);
}
tool-tip:is(
    [tip-position="top"],
    [tip-position="block-start"],
    :not([tip-position]),
    [tip-position="bottom"],
    [tip-position="block-end"]
  ) {
  text-align: center;
}

tool-tip:is(
    [tip-position="top"],
    [tip-position="block-start"],
    :not([tip-position])
  ) {
  inset-inline-start: 50%;
  inset-block-end: calc(100% + var(--_p-block) + var(--_triangle-size));
  --_x: calc(50% * var(--isRTL));
}

tool-tip:is(
    [tip-position="top"],
    [tip-position="block-start"],
    :not([tip-position])
  )::after {
  --_tip: var(--_bottom-tip);
  border-block-end: var(--_triangle-size) solid transparent;
}
tool-tip:is([tip-position="right"], [tip-position="inline-end"]) {
  inset-inline-start: calc(100% + var(--_p-inline) + var(--_triangle-size));
  inset-block-end: 50%;
  --_y: 50%;
}

tool-tip:is([tip-position="right"], [tip-position="inline-end"])::after {
  --_tip: var(--_left-tip);
  inset-inline-start: calc(var(--_triangle-size) * -1);
  border-inline-start: var(--_triangle-size) solid transparent;
}

tool-tip:is([tip-position="right"], [tip-position="inline-end"]):dir(
    rtl
  )::after {
  --_tip: var(--_right-tip);
}
tool-tip:is([tip-position="bottom"], [tip-position="block-end"]) {
  inset-inline-start: 50%;
  inset-block-start: calc(100% + var(--_p-block) + var(--_triangle-size));
  --_x: calc(50% * var(--isRTL));
}

tool-tip:is([tip-position="bottom"], [tip-position="block-end"])::after {
  --_tip: var(--_top-tip);
  inset-block-start: calc(var(--_triangle-size) * -1);
  border-block-start: var(--_triangle-size) solid transparent;
}
tool-tip:is([tip-position="left"], [tip-position="inline-start"]) {
  inset-inline-end: calc(100% + var(--_p-inline) + var(--_triangle-size));
  inset-block-end: 50%;
  --_y: 50%;
}

tool-tip:is([tip-position="left"], [tip-position="inline-start"])::after {
  --_tip: var(--_right-tip);
  inset-inline-end: calc(var(--_triangle-size) * -1);
  border-inline-end: var(--_triangle-size) solid transparent;
}

tool-tip:is([tip-position="left"], [tip-position="inline-start"]):dir(
    rtl
  )::after {
  --_tip: var(--_left-tip);
}

tool-tip {
  --isRTL: -1;
}

tool-tip:dir(rtl) {
  --isRTL: 1;
}
tool-tip[tip-position="top"] {
  --_x: calc(50% * var(--isRTL));
}
tool-tip[tip-position="right"]::after {
  --_tip: var(--_left-tip);
}

tool-tip[tip-position="right"]:dir(rtl)::after {
  --_tip: var(--_right-tip);
}
@media (prefers-reduced-motion: no-preference) {
  :has(
      > tool-tip:is(
          [tip-position="top"],
          [tip-position="block-start"],
          :not([tip-position])
        )
    ):not(:hover):not(:focus-visible):not(:active)
    tool-tip {
    --_y: 3px;
  }

  :has(
      > tool-tip:is([tip-position="right"], [tip-position="inline-end"])
    ):not(:hover):not(:focus-visible):not(:active)
    tool-tip {
    --_x: -3px;
  }

  :has(
      > tool-tip:is([tip-position="bottom"], [tip-position="block-end"])
    ):not(:hover):not(:focus-visible):not(:active)
    tool-tip {
    --_y: -3px;
  }

  :has(
      > tool-tip:is([tip-position="left"], [tip-position="inline-start"])
    ):not(:hover):not(:focus-visible):not(:active)
    tool-tip {
    --_x: 3px;
  }
}